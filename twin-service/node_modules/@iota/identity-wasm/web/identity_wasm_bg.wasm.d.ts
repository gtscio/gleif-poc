/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_timestamp_free: (a: number, b: number) => void;
export const timestamp_new: () => number;
export const timestamp_parse: (a: number, b: number) => [number, number, number];
export const timestamp_toRFC3339: (a: number) => [number, number];
export const timestamp_checkedAdd: (a: number, b: number) => number;
export const timestamp_checkedSub: (a: number, b: number) => number;
export const timestamp_toJSON: (a: number) => [number, number, number];
export const timestamp_fromJSON: (a: any) => [number, number, number];
export const __wbg_duration_free: (a: number, b: number) => void;
export const duration_seconds: (a: number) => number;
export const duration_minutes: (a: number) => number;
export const duration_hours: (a: number) => number;
export const duration_days: (a: number) => number;
export const duration_weeks: (a: number) => number;
export const duration_toJSON: (a: number) => [number, number, number];
export const duration_fromJSON: (a: any) => [number, number, number];
export const __wbg_proof_free: (a: number, b: number) => void;
export const proof_constructor: (a: number, b: number, c: any) => [number, number, number];
export const proof_type: (a: number) => [number, number];
export const proof_properties: (a: number) => [number, number, number];
export const proof_toJSON: (a: number) => [number, number, number];
export const proof_fromJSON: (a: any) => [number, number, number];
export const proof_clone: (a: number) => number;
export const __wbg_sdjwtvcbuilder_free: (a: number, b: number) => void;
export const sdjwtvcbuilder_new: (a: any, b: any) => [number, number, number];
export const sdjwtvcbuilder_fromCredential: (a: number, b: any) => [number, number, number];
export const sdjwtvcbuilder_makeConcealable: (a: number, b: number, c: number) => [number, number, number];
export const sdjwtvcbuilder_header: (a: number, b: any) => number;
export const sdjwtvcbuilder_addDecoys: (a: number, b: number, c: number, d: number) => [number, number, number];
export const sdjwtvcbuilder_requireKeyBinding: (a: number, b: any) => [number, number, number];
export const sdjwtvcbuilder_iss: (a: number, b: number, c: number) => [number, number, number];
export const sdjwtvcbuilder_nbf: (a: number, b: number) => number;
export const sdjwtvcbuilder_exp: (a: number, b: number) => number;
export const sdjwtvcbuilder_iat: (a: number, b: number) => number;
export const sdjwtvcbuilder_vct: (a: number, b: number, c: number) => number;
export const sdjwtvcbuilder_sub: (a: number, b: number, c: number) => number;
export const sdjwtvcbuilder_status: (a: number, b: any) => [number, number, number];
export const sdjwtvcbuilder_finish: (a: number, b: any, c: number, d: number) => any;
export const __wbg_typemetadata_free: (a: number, b: number) => void;
export const typemetadata_toJSON: (a: number) => [number, number, number];
export const typemetadata_fromJSON: (a: any) => [number, number, number];
export const typemetadata_new: (a: any) => [number, number, number];
export const typemetadata_intoInner: (a: number) => [number, number, number];
export const typemetadata_validateCredential: (a: number, b: any) => [number, number];
export const typemetadata_validateCredentialWithResolver: (a: number, b: any, c: any) => any;
export const timestamp_nowUTC: () => number;
export const __wbg_jwpcredentialoptions_free: (a: number, b: number) => void;
export const __wbg_get_jwpcredentialoptions_kid: (a: number) => [number, number];
export const __wbg_set_jwpcredentialoptions_kid: (a: number, b: number, c: number) => void;
export const jwpcredentialoptions_new: () => number;
export const jwpcredentialoptions_fromJSON: (a: any) => [number, number, number];
export const jwpcredentialoptions_toJSON: (a: number) => [number, number, number];
export const __wbg_statuslist2021_free: (a: number, b: number) => void;
export const statuslist2021_clone: (a: number) => number;
export const statuslist2021_new: (a: number) => [number, number, number];
export const statuslist2021_len: (a: number) => number;
export const statuslist2021_get: (a: number, b: number) => [number, number, number];
export const statuslist2021_set: (a: number, b: number, c: number) => [number, number];
export const statuslist2021_intoEncodedStr: (a: number) => [number, number];
export const statuslist2021_fromEncodedStr: (a: number, b: number) => [number, number, number];
export const __wbg_sdjwtbuilder_free: (a: number, b: number) => void;
export const sdjwtbuilder_new: (a: any, b: any, c: number) => [number, number, number];
export const sdjwtbuilder_makeConcealable: (a: number, b: number, c: number) => [number, number, number];
export const sdjwtbuilder_header: (a: number, b: any) => number;
export const sdjwtbuilder_insertClaim: (a: number, b: number, c: number, d: any) => [number, number, number];
export const sdjwtbuilder_addDecoys: (a: number, b: number, c: number, d: number) => [number, number, number];
export const sdjwtbuilder_requireKeyBinding: (a: number, b: any) => [number, number, number];
export const sdjwtbuilder_finish: (a: number, b: any, c: number, d: number) => any;
export const __wbg_disclosurev2_free: (a: number, b: number) => void;
export const __wbg_get_disclosurev2_salt: (a: number) => [number, number];
export const __wbg_set_disclosurev2_salt: (a: number, b: number, c: number) => void;
export const __wbg_get_disclosurev2_claimName: (a: number) => [number, number];
export const __wbg_set_disclosurev2_claimName: (a: number, b: number, c: number) => void;
export const __wbg_get_disclosurev2_claimValue: (a: number) => any;
export const __wbg_set_disclosurev2_claimValue: (a: number, b: any) => void;
export const disclosurev2_parse: (a: number, b: number) => [number, number, number];
export const disclosurev2_toString: (a: number) => [number, number];
export const __wbg_keybindingjwt_free: (a: number, b: number) => void;
export const keybindingjwt_parse: (a: number, b: number) => [number, number, number];
export const keybindingjwt_claims: (a: number) => any;
export const keybindingjwt_toString: (a: number) => [number, number];
export const keybindingjwt_toJSON: (a: number) => any;
export const __wbg_keybindingjwtbuilder_free: (a: number, b: number) => void;
export const keybindingjwtbuilder_new: () => number;
export const keybindingjwtbuilder_fromObject: (a: any) => [number, number, number];
export const keybindingjwtbuilder_header: (a: number, b: any) => [number, number, number];
export const keybindingjwtbuilder_iat: (a: number, b: number) => number;
export const keybindingjwtbuilder_aud: (a: number, b: number, c: number) => number;
export const keybindingjwtbuilder_nonce: (a: number, b: number, c: number) => number;
export const keybindingjwtbuilder_insertProperty: (a: number, b: number, c: number, d: any) => [number, number, number];
export const keybindingjwtbuilder_finish: (a: number, b: number, c: number, d: number, e: any) => any;
export const __wbg_sdjwtv2_free: (a: number, b: number) => void;
export const sdjwtv2_parse: (a: number, b: number) => [number, number, number];
export const sdjwtv2_header: (a: number) => any;
export const sdjwtv2_claims: (a: number) => [number, number, number];
export const sdjwtv2_disclosures: (a: number) => [number, number];
export const sdjwtv2_requiredKeyBind: (a: number) => any;
export const sdjwtv2_intoDisclosedObject: (a: number) => [number, number, number];
export const sdjwtv2_presentation: (a: number) => [number, number];
export const sdjwtv2_toJSON: (a: number) => any;
export const __wbg_sdjwtpresentationbuilder_free: (a: number, b: number) => void;
export const sdjwtpresentationbuilder_new: (a: number, b: any) => [number, number, number];
export const sdjwtpresentationbuilder_conceal: (a: number, b: number, c: number) => [number, number, number];
export const sdjwtpresentationbuilder_attachKeyBindingJwt: (a: number, b: number) => number;
export const sdjwtpresentationbuilder_finish: (a: number) => [number, number, number];
export const __wbg_sdjwtpresentationresult_free: (a: number, b: number) => void;
export const __wbg_get_sdjwtpresentationresult_sdJwt: (a: number) => number;
export const __wbg_set_sdjwtpresentationresult_sdJwt: (a: number, b: number) => void;
export const __wbg_get_sdjwtpresentationresult_disclosures: (a: number) => [number, number];
export const __wbg_set_sdjwtpresentationresult_disclosures: (a: number, b: number, c: number) => void;
export const __wbg_methodscope_free: (a: number, b: number) => void;
export const methodscope_VerificationMethod: () => number;
export const methodscope_Authentication: () => number;
export const methodscope_AssertionMethod: () => number;
export const methodscope_KeyAgreement: () => number;
export const methodscope_CapabilityDelegation: () => number;
export const methodscope_CapabilityInvocation: () => number;
export const methodscope_toString: (a: number) => [number, number];
export const methodscope_toJSON: (a: number) => [number, number, number];
export const methodscope_fromJSON: (a: any) => [number, number, number];
export const methodscope_clone: (a: number) => number;
export const sdjwtv2_toString: (a: number) => any;
export const __wbg_decodedjptpresentation_free: (a: number, b: number) => void;
export const decodedjptpresentation_clone: (a: number) => number;
export const decodedjptpresentation_credential: (a: number) => number;
export const decodedjptpresentation_customClaims: (a: number) => [number, number, number];
export const decodedjptpresentation_aud: (a: number) => [number, number];
export const __wbg_decodedjwtcredential_free: (a: number, b: number) => void;
export const decodedjwtcredential_credential: (a: number) => number;
export const decodedjwtcredential_protectedHeader: (a: number) => number;
export const decodedjwtcredential_customClaims: (a: number) => any;
export const decodedjwtcredential_intoCredential: (a: number) => number;
export const __wbg_keybindingjwtvalidationoptions_free: (a: number, b: number) => void;
export const keybindingjwtvalidationoptions_new: (a: number) => [number, number, number];
export const keybindingjwtvalidationoptions_toJSON: (a: number) => [number, number, number];
export const keybindingjwtvalidationoptions_fromJSON: (a: any) => [number, number, number];
export const keybindingjwtvalidationoptions_clone: (a: number) => number;
export const __wbg_unknowncredential_free: (a: number, b: number) => void;
export const unknowncredential_tryIntoJwt: (a: number) => number;
export const unknowncredential_tryIntoCredential: (a: number) => number;
export const unknowncredential_tryIntoRaw: (a: number) => any;
export const unknowncredential_toJSON: (a: number) => [number, number, number];
export const unknowncredential_fromJSON: (a: any) => [number, number, number];
export const unknowncredential_clone: (a: number) => number;
export const __wbg_decodedjwtpresentation_free: (a: number, b: number) => void;
export const decodedjwtpresentation_presentation: (a: number) => number;
export const decodedjwtpresentation_protectedHeader: (a: number) => number;
export const decodedjwtpresentation_intoPresentation: (a: number) => number;
export const decodedjwtpresentation_expirationDate: (a: number) => number;
export const decodedjwtpresentation_issuanceDate: (a: number) => number;
export const decodedjwtpresentation_audience: (a: number) => [number, number];
export const decodedjwtpresentation_customClaims: (a: number) => any;
export const __wbg_jwsverificationoptions_free: (a: number, b: number) => void;
export const jwsverificationoptions_new: (a: number) => [number, number, number];
export const jwsverificationoptions_setNonce: (a: number, b: number, c: number) => void;
export const jwsverificationoptions_setMethodScope: (a: number, b: number) => void;
export const jwsverificationoptions_setMethodId: (a: number, b: number) => void;
export const jwsverificationoptions_toJSON: (a: number) => [number, number, number];
export const jwsverificationoptions_fromJSON: (a: any) => [number, number, number];
export const jwsverificationoptions_clone: (a: number) => number;
export const __wbg_iotadocument_free: (a: number, b: number) => void;
export const iotadocument_new: (a: number, b: number) => [number, number, number];
export const iotadocument_newWithId: (a: number) => number;
export const iotadocument_id: (a: number) => [number, number, number];
export const iotadocument_controller: (a: number) => [number, number, number];
export const iotadocument_setController: (a: number, b: any) => [number, number];
export const iotadocument_alsoKnownAs: (a: number) => [number, number, number];
export const iotadocument_setAlsoKnownAs: (a: number, b: any) => [number, number];
export const iotadocument_properties: (a: number) => [number, number, number];
export const iotadocument_setPropertyUnchecked: (a: number, b: number, c: number, d: any) => [number, number];
export const iotadocument_service: (a: number) => [number, number, number];
export const iotadocument_insertService: (a: number, b: number) => [number, number];
export const iotadocument_removeService: (a: number, b: number) => [number, number, number];
export const iotadocument_resolveService: (a: number, b: any) => [number, number, number];
export const iotadocument_methods: (a: number, b: number) => [number, number, number];
export const iotadocument_insertMethod: (a: number, b: number, c: number) => [number, number];
export const iotadocument_removeMethod: (a: number, b: number) => [number, number, number];
export const iotadocument_resolveMethod: (a: number, b: any, c: number) => [number, number, number];
export const iotadocument_attachMethodRelationship: (a: number, b: number, c: number) => [number, number, number];
export const iotadocument_detachMethodRelationship: (a: number, b: number, c: number) => [number, number, number];
export const iotadocument_verifyJws: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const iotadocument_pack: (a: number) => [number, number, number, number];
export const iotadocument_packWithEncoding: (a: number, b: number) => [number, number, number, number];
export const iotadocument_metadata: (a: number) => [number, number, number];
export const iotadocument_metadataCreated: (a: number) => [number, number, number];
export const iotadocument_setMetadataCreated: (a: number, b: any) => [number, number];
export const iotadocument_metadataUpdated: (a: number) => [number, number, number];
export const iotadocument_setMetadataUpdated: (a: number, b: any) => [number, number];
export const iotadocument_metadataDeactivated: (a: number) => [number, number, number];
export const iotadocument_setMetadataDeactivated: (a: number, b: number) => [number, number];
export const iotadocument_setMetadataPropertyUnchecked: (a: number, b: number, c: number, d: any) => [number, number];
export const iotadocument_revokeCredentials: (a: number, b: any, c: any) => [number, number];
export const iotadocument_unrevokeCredentials: (a: number, b: any, c: any) => [number, number];
export const iotadocument_clone: (a: number) => [number, number, number];
export const iotadocument__shallowCloneInternal: (a: number) => number;
export const iotadocument__strongCountInternal: (a: number) => number;
export const iotadocument_toJSON: (a: number) => [number, number, number];
export const iotadocument_fromJSON: (a: any) => [number, number, number];
export const iotadocument_toCoreDocument: (a: number) => [number, number, number];
export const iotadocument_generateMethod: (a: number, b: number, c: number, d: number, e: any, f: number, g: number, h: number) => [number, number, number];
export const iotadocument_purgeMethod: (a: number, b: number, c: number) => [number, number, number];
export const iotadocument_createJwt: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const iotadocument_createJws: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const iotadocument_createCredentialJwt: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const iotadocument_createPresentationJwt: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const iotadocument_generateMethodJwp: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const iotadocument_createIssuedJwp: (a: number, b: number, c: number, d: number, e: any, f: number) => [number, number, number];
export const iotadocument_createPresentedJwp: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const iotadocument_createCredentialJpt: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const iotadocument_createPresentationJpt: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const __wbg_iotadocumentmetadata_free: (a: number, b: number) => void;
export const iotadocumentmetadata_created: (a: number) => number;
export const iotadocumentmetadata_updated: (a: number) => number;
export const iotadocumentmetadata_deactivated: (a: number) => number;
export const iotadocumentmetadata_properties: (a: number) => [number, number, number];
export const iotadocumentmetadata_toJSON: (a: number) => [number, number, number];
export const iotadocumentmetadata_fromJSON: (a: any) => [number, number, number];
export const iotadocumentmetadata_clone: (a: number) => number;
export const __wbg_jwk_free: (a: number, b: number) => void;
export const jwk_new: (a: any) => number;
export const jwk_kty: (a: number) => any;
export const jwk_use: (a: number) => any;
export const jwk_keyOps: (a: number) => any;
export const jwk_alg: (a: number) => any;
export const jwk_kid: (a: number) => [number, number];
export const jwk_setKid: (a: number, b: number, c: number) => void;
export const jwk_x5u: (a: number) => [number, number];
export const jwk_x5c: (a: number) => any;
export const jwk_x5t: (a: number) => [number, number];
export const jwk_x5t256: (a: number) => [number, number];
export const jwk_paramsEc: (a: number) => [number, number, number];
export const jwk_paramsOkp: (a: number) => [number, number, number];
export const jwk_paramsOct: (a: number) => [number, number, number];
export const jwk_paramsRsa: (a: number) => [number, number, number];
export const jwk_thumbprintSha256B64: (a: number) => [number, number];
export const jwk_toPublic: (a: number) => number;
export const jwk_isPublic: (a: number) => number;
export const jwk_isPrivate: (a: number) => number;
export const jwk_toJSON: (a: number) => [number, number, number];
export const jwk_fromJSON: (a: any) => [number, number, number];
export const jwk_clone: (a: number) => number;
export const __wbg_jwsheader_free: (a: number, b: number) => void;
export const jwsheader_new: () => number;
export const jwsheader_alg: (a: number) => any;
export const jwsheader_setAlg: (a: number, b: any) => [number, number];
export const jwsheader_b64: (a: number) => number;
export const jwsheader_setB64: (a: number, b: number) => void;
export const jwsheader_custom: (a: number) => any;
export const jwsheader_has: (a: number, b: number, c: number) => number;
export const jwsheader_isDisjoint: (a: number, b: number) => number;
export const jwsheader_jku: (a: number) => [number, number];
export const jwsheader_setJku: (a: number, b: number, c: number) => [number, number];
export const jwsheader_jwk: (a: number) => number;
export const jwsheader_setJwk: (a: number, b: number) => void;
export const jwsheader_kid: (a: number) => [number, number];
export const jwsheader_setKid: (a: number, b: number, c: number) => void;
export const jwsheader_x5u: (a: number) => [number, number];
export const jwsheader_setX5u: (a: number, b: number, c: number) => [number, number];
export const jwsheader_setX5c: (a: number, b: any) => [number, number];
export const jwsheader_x5t: (a: number) => [number, number];
export const jwsheader_setX5t: (a: number, b: number, c: number) => void;
export const jwsheader_x5tS256: (a: number) => [number, number];
export const jwsheader_setX5tS256: (a: number, b: number, c: number) => void;
export const jwsheader_typ: (a: number) => [number, number];
export const jwsheader_setTyp: (a: number, b: number, c: number) => void;
export const jwsheader_cty: (a: number) => [number, number];
export const jwsheader_setCty: (a: number, b: number, c: number) => void;
export const jwsheader_crit: (a: number) => any;
export const jwsheader_setCrit: (a: number, b: any) => [number, number];
export const jwsheader_url: (a: number) => [number, number];
export const jwsheader_setUrl: (a: number, b: number, c: number) => [number, number];
export const jwsheader_nonce: (a: number) => [number, number];
export const jwsheader_setNonce: (a: number, b: number, c: number) => void;
export const jwsheader_toJSON: (a: number) => [number, number, number];
export const jwsheader_fromJSON: (a: any) => [number, number, number];
export const jwsheader_clone: (a: number) => number;
export const __wbg_issuerprotectedheader_free: (a: number, b: number) => void;
export const __wbg_get_issuerprotectedheader_typ: (a: number) => [number, number];
export const __wbg_set_issuerprotectedheader_typ: (a: number, b: number, c: number) => void;
export const __wbg_get_issuerprotectedheader_alg: (a: number) => number;
export const __wbg_set_issuerprotectedheader_alg: (a: number, b: number) => void;
export const __wbg_get_issuerprotectedheader_kid: (a: number) => [number, number];
export const __wbg_set_issuerprotectedheader_kid: (a: number, b: number, c: number) => void;
export const __wbg_get_issuerprotectedheader_cid: (a: number) => [number, number];
export const __wbg_set_issuerprotectedheader_cid: (a: number, b: number, c: number) => void;
export const issuerprotectedheader_claims: (a: number) => [number, number];
export const __wbg_sdjwtvcpresentationbuilder_free: (a: number, b: number) => void;
export const sdjwtvcpresentationbuilder_conceal: (a: number, b: number, c: number) => [number, number, number];
export const sdjwtvcpresentationbuilder_attachKeyBindingJwt: (a: number, b: number) => number;
export const sdjwtvcpresentationbuilder_finish: (a: number) => [number, number, number];
export const __wbg_sdjwtvcpresentationresult_free: (a: number, b: number) => void;
export const __wbg_get_sdjwtvcpresentationresult_sdJwtVc: (a: number) => number;
export const __wbg_set_sdjwtvcpresentationresult_sdJwtVc: (a: number, b: number) => void;
export const __wbg_get_sdjwtvcpresentationresult_disclosures: (a: number) => [number, number];
export const __wbg_set_sdjwtvcpresentationresult_disclosures: (a: number, b: number, c: number) => void;
export const __wbg_sdjwtvc_free: (a: number, b: number) => void;
export const sdjwtvc_clone: (a: number) => number;
export const sdjwtvc_parse: (a: number, b: number) => [number, number, number];
export const sdjwtvc_claims: (a: number) => [number, number, number];
export const sdjwtvc_asSdJwt: (a: number) => number;
export const sdjwtvc_issuerJwk: (a: number, b: any) => any;
export const sdjwtvc_issuerMetadata: (a: number, b: any) => any;
export const sdjwtvc_typeMetadata: (a: number, b: any) => any;
export const sdjwtvc_verifySignature: (a: number, b: number, c: number) => [number, number];
export const sdjwtvc_validateClaimDisclosability: (a: number, b: number, c: number) => [number, number];
export const sdjwtvc_validate: (a: number, b: any, c: any, d: number) => any;
export const sdjwtvc_verifyKeyBinding: (a: number, b: number, c: number) => [number, number];
export const sdjwtvc_validateKeyBinding: (a: number, b: number, c: any, d: number, e: number) => [number, number];
export const sdjwtvc_intoSdJwt: (a: number) => number;
export const sdjwtvc_intoDisclosedObject: (a: number, b: any) => [number, number, number];
export const sdjwtvc_intoPresentation: (a: number, b: any) => [number, number, number];
export const sdjwtvc_toJSON: (a: number) => any;
export const vctToUrl: (a: number, b: number) => [number, number];
export const __wbg_jwtpresentationoptions_free: (a: number, b: number) => void;
export const jwtpresentationoptions_new: (a: number) => [number, number, number];
export const jwtpresentationoptions_toJSON: (a: number) => [number, number, number];
export const jwtpresentationoptions_fromJSON: (a: any) => [number, number, number];
export const jwtpresentationoptions_clone: (a: number) => number;
export const __wbg_jwssignatureoptions_free: (a: number, b: number) => void;
export const jwssignatureoptions_new: (a: number) => [number, number, number];
export const jwssignatureoptions_setAttachJwk: (a: number, b: number) => void;
export const jwssignatureoptions_setB64: (a: number, b: number) => void;
export const jwssignatureoptions_setTyp: (a: number, b: number, c: number) => void;
export const jwssignatureoptions_setCty: (a: number, b: number, c: number) => void;
export const jwssignatureoptions_serUrl: (a: number, b: number, c: number) => [number, number];
export const jwssignatureoptions_setNonce: (a: number, b: number, c: number) => void;
export const jwssignatureoptions_setKid: (a: number, b: number, c: number) => void;
export const jwssignatureoptions_setDetachedPayload: (a: number, b: number) => void;
export const jwssignatureoptions_setCustomHeaderParameters: (a: number, b: any) => [number, number];
export const jwssignatureoptions_toJSON: (a: number) => [number, number, number];
export const jwssignatureoptions_fromJSON: (a: any) => [number, number, number];
export const jwssignatureoptions_clone: (a: number) => number;
export const verifyEd25519: (a: any, b: number, c: number, d: number, e: number, f: number) => [number, number];
export const __wbg_eddsajwsverifier_free: (a: number, b: number) => void;
export const eddsajwsverifier_new: () => number;
export const eddsajwsverifier_verify: (a: number, b: any, c: number, d: number, e: number, f: number, g: number) => [number, number];
export const __wbg_ecdsajwsverifier_free: (a: number, b: number) => void;
export const ecdsajwsverifier_new: () => number;
export const ecdsajwsverifier_verify: (a: number, b: any, c: number, d: number, e: number, f: number, g: number) => [number, number];
export const __wbg_controllertoken_free: (a: number, b: number) => void;
export const controllertoken_fromControllerCap: (a: number) => number;
export const controllertoken_fromDelegationToken: (a: number) => number;
export const controllertoken_id: (a: number) => [number, number];
export const controllertoken_controllerOf: (a: number) => [number, number];
export const controllertoken_toControllerCap: (a: number) => number;
export const controllertoken_toDelegationToken: (a: number) => number;
export const controllertoken_getById: (a: number, b: number, c: any) => any;
export const __wbg_controllercap_free: (a: number, b: number) => void;
export const controllercap_id: (a: number) => [number, number];
export const controllercap_controllerOf: (a: number) => [number, number];
export const controllercap_canDelegate: (a: number) => number;
export const controllercap_delegate: (a: number, b: number, c: number, d: number) => [number, number, number];
export const __wbg_delegationtoken_free: (a: number, b: number) => void;
export const delegationtoken_id: (a: number) => [number, number];
export const delegationtoken_controller: (a: number) => [number, number];
export const delegationtoken_controllerOf: (a: number) => [number, number];
export const delegationtoken_permissions: (a: number) => number;
export const __wbg_delegatetoken_free: (a: number, b: number) => void;
export const delegatetoken_new: (a: number, b: number, c: number, d: number) => [number, number, number];
export const delegatetoken_buildProgrammableTransaction: (a: number, b: number) => any;
export const delegatetoken_apply: (a: number, b: any, c: number) => any;
export const __wbg_delegationtokenrevocation_free: (a: number, b: number) => void;
export const delegationtokenrevocation_new: (a: number, b: number, c: number, d: number) => [number, number, number];
export const delegationtokenrevocation_isRevocation: (a: number) => number;
export const delegationtokenrevocation_tokenId: (a: number) => [number, number];
export const delegationtokenrevocation_buildProgrammableTransaction: (a: number, b: number) => any;
export const delegationtokenrevocation_apply: (a: number, b: any, c: number) => any;
export const __wbg_deletedelegationtoken_free: (a: number, b: number) => void;
export const deletedelegationtoken_new: (a: number, b: number) => [number, number, number];
export const deletedelegationtoken_tokenId: (a: number) => [number, number];
export const deletedelegationtoken_buildProgrammableTransaction: (a: number, b: number) => any;
export const deletedelegationtoken_apply: (a: number, b: any, c: number) => any;
export const __wbg_controllerandvotingpower_free: (a: number, b: number) => void;
export const __wbg_get_controllerandvotingpower_0: (a: number) => [number, number];
export const __wbg_set_controllerandvotingpower_0: (a: number, b: number, c: number) => void;
export const __wbg_get_controllerandvotingpower_1: (a: number) => bigint;
export const __wbg_set_controllerandvotingpower_1: (a: number, b: bigint) => void;
export const __wbg_get_controllerandvotingpower_2: (a: number) => number;
export const __wbg_set_controllerandvotingpower_2: (a: number, b: number) => void;
export const controllerandvotingpower_new: (a: number, b: number, c: bigint, d: number) => number;
export const __wbg_onchainidentity_free: (a: number, b: number) => void;
export const onchainidentity_getById: (a: number, b: number, c: any) => any;
export const onchainidentity_id: (a: number) => [number, number, number, number];
export const onchainidentity_didDocument: (a: number) => [number, number, number];
export const onchainidentity_hasDeletedDid: (a: number) => [number, number, number];
export const onchainidentity_isShared: (a: number) => [number, number, number];
export const onchainidentity_getControllerToken: (a: number, b: number) => any;
export const onchainidentity_getControllerTokenForAddress: (a: number, b: number, c: number, d: number) => any;
export const onchainidentity_proposals: (a: number) => [number, number, number];
export const onchainidentity_updateDidDocument: (a: number, b: number, c: number, d: number, e: bigint) => number;
export const onchainidentity_deactivateDid: (a: number, b: number, c: number, d: bigint) => number;
export const onchainidentity_deleteDid: (a: number, b: number, c: number, d: bigint) => number;
export const onchainidentity_updateConfig: (a: number, b: number, c: number, d: number, e: bigint) => number;
export const onchainidentity_sendAssets: (a: number, b: number, c: number, d: number, e: number, f: bigint) => [number, number, number];
export const onchainidentity_revokeDelegationToken: (a: number, b: number, c: number) => [number, number, number];
export const onchainidentity_unrevokeDelegationToken: (a: number, b: number, c: number) => [number, number, number];
export const __wbg_identitybuilder_free: (a: number, b: number) => void;
export const identitybuilder_new: (a: number) => [number, number, number];
export const identitybuilder_controller: (a: number, b: number, c: number, d: bigint, e: number) => [number, number, number];
export const identitybuilder_threshold: (a: number, b: bigint) => number;
export const identitybuilder_controllers: (a: number, b: number, c: number) => [number, number, number];
export const identitybuilder_finish: (a: number) => number;
export const __wbg_createidentity_free: (a: number, b: number) => void;
export const createidentity_new: (a: number) => number;
export const createidentity_buildProgrammableTransaction: (a: number, b: any) => any;
export const createidentity_apply: (a: number, b: any, c: any) => any;
export const __wbg_updatedid_free: (a: number, b: number) => void;
export const updatedid_isDeactivation: (a: number) => number;
export const updatedid_didDocument: (a: number) => [number, number, number];
export const __wbg_updatedidproposal_free: (a: number, b: number) => void;
export const updateddidproposal_id: (a: number) => [number, number, number, number];
export const updateddidproposal_action: (a: number) => [number, number, number];
export const updateddidproposal_expiration_epoch: (a: number) => [number, bigint, number, number];
export const updateddidproposal_votes: (a: number) => [bigint, number, number];
export const updateddidproposal_voters: (a: number) => [number, number, number];
export const updateddidproposal_approve: (a: number, b: number, c: number) => [number, number, number];
export const updateddidproposal_intoTx: (a: number, b: number, c: number) => number;
export const __wbg_approveupdatediddocumentproposal_free: (a: number, b: number) => void;
export const approveupdatediddocumentproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const approveupdatediddocumentproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_executeupdatedidproposal_free: (a: number, b: number) => void;
export const executeupdatedidproposal_new: (a: number, b: number, c: number) => number;
export const executeupdatedidproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const executeupdatedidproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_createupdatedidproposal_free: (a: number, b: number) => void;
export const createupdatedidproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const createupdatedidproposal_apply: (a: number, b: any, c: any) => any;
export const sdjwtvcpresentationbuilder_new: (a: number, b: any) => [number, number, number];
export const jwsheader_x5c: (a: number) => any;
export const onchainidentity_deleteDelegationToken: (a: number, b: number) => [number, number, number];
export const sdjwtvc_toString: (a: number) => any;
export const __wbg_jwppresentationoptions_free: (a: number, b: number) => void;
export const __wbg_get_jwppresentationoptions_audience: (a: number) => [number, number];
export const __wbg_set_jwppresentationoptions_audience: (a: number, b: number, c: number) => void;
export const __wbg_get_jwppresentationoptions_nonce: (a: number) => [number, number];
export const __wbg_set_jwppresentationoptions_nonce: (a: number, b: number, c: number) => void;
export const jwppresentationoptions_new: () => number;
export const __wbg_selectivedisclosurepresentation_free: (a: number, b: number) => void;
export const selectivedisclosurepresentation_new: (a: number) => number;
export const selectivedisclosurepresentation_concealInSubject: (a: number, b: number, c: number) => [number, number];
export const selectivedisclosurepresentation_concealInEvidence: (a: number, b: number, c: number) => [number, number];
export const selectivedisclosurepresentation_setPresentationHeader: (a: number, b: number) => void;
export const __wbg_payloadentry_free: (a: number, b: number) => void;
export const __wbg_get_payloadentry_1: (a: number) => number;
export const __wbg_set_payloadentry_1: (a: number, b: number) => void;
export const payloadentry_set_value: (a: number, b: any) => void;
export const payloadentry_value: (a: number) => any;
export const __wbg_payloads_free: (a: number, b: number) => void;
export const payloads_toJSON: (a: number) => [number, number, number];
export const payloads_fromJSON: (a: any) => [number, number, number];
export const payloads_clone: (a: number) => number;
export const payloads_new: (a: number, b: number) => [number, number, number];
export const payloads_newFromValues: (a: number, b: number) => [number, number, number];
export const payloads_getValues: (a: number) => [number, number, number, number];
export const payloads_getUndisclosedIndexes: (a: number) => [number, number];
export const payloads_getDisclosedIndexes: (a: number) => [number, number];
export const payloads_getUndisclosedPayloads: (a: number) => [number, number, number, number];
export const payloads_getDisclosedPayloads: (a: number) => number;
export const payloads_setUndisclosed: (a: number, b: number) => void;
export const payloads_replacePayloadAtIndex: (a: number, b: number, c: any) => [number, number, number];
export const __wbg_presentationprotectedheader_free: (a: number, b: number) => void;
export const __wbg_get_presentationprotectedheader_alg: (a: number) => number;
export const __wbg_set_presentationprotectedheader_alg: (a: number, b: number) => void;
export const __wbg_disclosure_free: (a: number, b: number) => void;
export const disclosure_new: (a: number, b: number, c: number, d: number, e: any) => [number, number, number];
export const disclosure_parse: (a: number, b: number) => [number, number, number];
export const disclosure_disclosure: (a: number) => [number, number];
export const disclosure_salt: (a: number) => [number, number];
export const disclosure_claimName: (a: number) => [number, number];
export const disclosure_claimValue: (a: number) => [number, number, number];
export const disclosure_toJSON: (a: number) => [number, number, number];
export const disclosure_fromJSON: (a: any) => [number, number, number];
export const __wbg_sdobjectencoder_free: (a: number, b: number) => void;
export const sdobjectencoder_new: (a: any) => [number, number, number];
export const sdobjectencoder_conceal: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const sdobjectencoder_addSdAlgProperty: (a: number) => void;
export const sdobjectencoder_encodeToString: (a: number) => [number, number, number, number];
export const sdobjectencoder_encodeToObject: (a: number) => [number, number, number];
export const sdobjectencoder_toJSON: (a: number) => [number, number, number];
export const sdobjectencoder_addDecoys: (a: number, b: number, c: number, d: number) => [number, number];
export const __wbg_claimmetadata_free: (a: number, b: number) => void;
export const __wbg_get_claimmetadata_path: (a: number) => any;
export const __wbg_set_claimmetadata_path: (a: number, b: any) => void;
export const __wbg_get_claimmetadata_display: (a: number) => [number, number];
export const __wbg_set_claimmetadata_display: (a: number, b: number, c: number) => void;
export const __wbg_get_claimmetadata_sd: (a: number) => any;
export const __wbg_set_claimmetadata_sd: (a: number, b: number) => void;
export const __wbg_get_claimmetadata_svg_id: (a: number) => [number, number];
export const __wbg_set_claimmetadata_svg_id: (a: number, b: number, c: number) => void;
export const __wbg_claimdisplay_free: (a: number, b: number) => void;
export const __wbg_get_claimdisplay_lang: (a: number) => [number, number];
export const __wbg_set_claimdisplay_lang: (a: number, b: number, c: number) => void;
export const __wbg_get_claimdisplay_label: (a: number) => [number, number];
export const __wbg_set_claimdisplay_label: (a: number, b: number, c: number) => void;
export const __wbg_get_claimdisplay_description: (a: number) => [number, number];
export const __wbg_set_claimdisplay_description: (a: number, b: number, c: number) => void;
export const __wbg_proofupdatectx_free: (a: number, b: number) => void;
export const __wbg_get_proofupdatectx_old_start_validity_timeframe: (a: number) => [number, number];
export const __wbg_get_proofupdatectx_new_start_validity_timeframe: (a: number) => [number, number];
export const __wbg_get_proofupdatectx_old_end_validity_timeframe: (a: number) => [number, number];
export const __wbg_set_proofupdatectx_old_end_validity_timeframe: (a: number, b: number, c: number) => void;
export const __wbg_get_proofupdatectx_new_end_validity_timeframe: (a: number) => [number, number];
export const __wbg_set_proofupdatectx_new_end_validity_timeframe: (a: number, b: number, c: number) => void;
export const __wbg_get_proofupdatectx_index_start_validity_timeframe: (a: number) => number;
export const __wbg_set_proofupdatectx_index_start_validity_timeframe: (a: number, b: number) => void;
export const __wbg_get_proofupdatectx_index_end_validity_timeframe: (a: number) => number;
export const __wbg_set_proofupdatectx_index_end_validity_timeframe: (a: number, b: number) => void;
export const __wbg_get_proofupdatectx_number_of_signed_messages: (a: number) => number;
export const __wbg_set_proofupdatectx_number_of_signed_messages: (a: number, b: number) => void;
export const jwkstorage_generateBBS: (a: number, b: number) => any;
export const jwkstorage_signBBS: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const jwkstorage_updateBBSSignature: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const start: () => void;
export const __wbg_set_proofupdatectx_old_start_validity_timeframe: (a: number, b: number, c: number) => void;
export const __wbg_set_proofupdatectx_new_start_validity_timeframe: (a: number, b: number, c: number) => void;
export const sdobjectencoder_toString: (a: number) => [number, number, number, number];
export const __wbg_set_presentationprotectedheader_kid: (a: number, b: number, c: number) => void;
export const __wbg_set_presentationprotectedheader_aud: (a: number, b: number, c: number) => void;
export const __wbg_set_presentationprotectedheader_nonce: (a: number, b: number, c: number) => void;
export const __wbg_get_presentationprotectedheader_kid: (a: number) => [number, number];
export const __wbg_get_presentationprotectedheader_aud: (a: number) => [number, number];
export const __wbg_get_presentationprotectedheader_nonce: (a: number) => [number, number];
export const disclosure_toEncodedString: (a: number) => [number, number];
export const disclosure_toString: (a: number) => [number, number];
export const __wbg_jwtcredentialvalidationoptions_free: (a: number, b: number) => void;
export const jwtcredentialvalidationoptions_new: (a: number) => [number, number, number];
export const jwtcredentialvalidationoptions_toJSON: (a: number) => [number, number, number];
export const jwtcredentialvalidationoptions_fromJSON: (a: any) => [number, number, number];
export const jwtcredentialvalidationoptions_clone: (a: number) => number;
export const __wbg_jwtpresentationvalidationoptions_free: (a: number, b: number) => void;
export const jwtpresentationvalidationoptions_new: (a: number) => [number, number, number];
export const jwtpresentationvalidationoptions_toJSON: (a: number) => [number, number, number];
export const jwtpresentationvalidationoptions_fromJSON: (a: any) => [number, number, number];
export const jwtpresentationvalidationoptions_clone: (a: number) => number;
export const __wbg_linkeddomainservice_free: (a: number, b: number) => void;
export const linkeddomainservice_new: (a: any) => [number, number, number];
export const linkeddomainservice_domains: (a: number) => any;
export const linkeddomainservice_toService: (a: number) => number;
export const linkeddomainservice_fromService: (a: number) => [number, number, number];
export const linkeddomainservice_isValid: (a: number) => number;
export const linkeddomainservice_clone: (a: number) => number;
export const __wbg_linkedverifiablepresentationservice_free: (a: number, b: number) => void;
export const linkedverifiablepresentationservice_new: (a: any) => [number, number, number];
export const linkedverifiablepresentationservice_verifiablePresentationUrls: (a: number) => any;
export const linkedverifiablepresentationservice_toService: (a: number) => number;
export const linkedverifiablepresentationservice_fromService: (a: number) => [number, number, number];
export const linkedverifiablepresentationservice_isValid: (a: number) => number;
export const linkedverifiablepresentationservice_clone: (a: number) => number;
export const linkedverifiablepresentationservice_toJSON: (a: number) => [number, number, number];
export const linkedverifiablepresentationservice_fromJSON: (a: any) => [number, number, number];
export const __wbg_service_free: (a: number, b: number) => void;
export const service_new: (a: any) => [number, number, number];
export const service_id: (a: number) => number;
export const service_type: (a: number) => any;
export const service_serviceEndpoint: (a: number) => any;
export const service_properties: (a: number) => [number, number, number];
export const service_toJSON: (a: number) => [number, number, number];
export const service_fromJSON: (a: any) => [number, number, number];
export const service_clone: (a: number) => number;
export const __wbg_sdobjectdecoder_free: (a: number, b: number) => void;
export const sdobjectdecoder_new: () => number;
export const sdobjectdecoder_decode: (a: number, b: any, c: any) => [number, number, number];
export const __wbg_keybindingjwtclaims_free: (a: number, b: number) => void;
export const keybindingjwtclaims_new: (a: number, b: number, c: any, d: number, e: number, f: number, g: number, h: number, i: number) => [number, number, number];
export const keybindingjwtclaims_toString: (a: number) => [number, number, number, number];
export const keybindingjwtclaims_iat: (a: number) => bigint;
export const keybindingjwtclaims_aud: (a: number) => [number, number];
export const keybindingjwtclaims_nonce: (a: number) => [number, number];
export const keybindingjwtclaims_sdHash: (a: number) => [number, number];
export const keybindingjwtclaims_customProperties: (a: number) => [number, number, number];
export const keybindingjwtclaims_keyBindingJwtHeaderTyp: () => [number, number];
export const keybindingjwtclaims_toJSON: (a: number) => [number, number, number];
export const keybindingjwtclaims_fromJSON: (a: any) => [number, number, number];
export const keybindingjwtclaims_clone: (a: number) => number;
export const __wbg_configchange_free: (a: number, b: number) => void;
export const __wbg_get_configchange_threshold: (a: number) => [number, bigint];
export const __wbg_set_configchange_threshold: (a: number, b: number, c: bigint) => void;
export const __wbg_get_configchange_controllersToAdd: (a: number) => any;
export const __wbg_set_configchange_controllersToAdd: (a: number, b: number) => void;
export const __wbg_get_configchange_controllersToRemove: (a: number) => any;
export const __wbg_set_configchange_controllersToRemove: (a: number, b: number) => void;
export const __wbg_get_configchange_controllersToUpdate: (a: number) => any;
export const __wbg_set_configchange_controllersToUpdate: (a: number, b: number) => void;
export const __wbg_configchangeproposal_free: (a: number, b: number) => void;
export const configchangeproposal_id: (a: number) => [number, number, number, number];
export const configchangeproposal_action: (a: number) => [number, number, number];
export const configchangeproposal_expiration_epoch: (a: number) => [number, bigint, number, number];
export const configchangeproposal_votes: (a: number) => [bigint, number, number];
export const configchangeproposal_voters: (a: number) => [number, number, number];
export const configchangeproposal_approve: (a: number, b: number, c: number) => number;
export const configchangeproposal_intoTx: (a: number, b: number, c: number) => number;
export const __wbg_approveconfigchangeproposal_free: (a: number, b: number) => void;
export const approveconfigchangeproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const approveconfigchangeproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_executeconfigchangeproposal_free: (a: number, b: number) => void;
export const executeconfigchangeproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const executeconfigchangeproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_createconfigchangeproposal_free: (a: number, b: number) => void;
export const createconfigchangeproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const createconfigchangeproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_revocationtimeframestatus_free: (a: number, b: number) => void;
export const revocationtimeframestatus_clone: (a: number) => number;
export const revocationtimeframestatus_toJSON: (a: number) => [number, number, number];
export const revocationtimeframestatus_fromJSON: (a: any) => [number, number, number];
export const revocationtimeframestatus_new: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const revocationtimeframestatus_startValidityTimeframe: (a: number) => number;
export const revocationtimeframestatus_endValidityTimeframe: (a: number) => number;
export const revocationtimeframestatus_id: (a: number) => [number, number];
export const revocationtimeframestatus_index: (a: number) => number;
export const __wbg_didjwk_free: (a: number, b: number) => void;
export const didjwk_new: (a: any) => [number, number, number];
export const didjwk_parse: (a: number, b: number) => [number, number, number];
export const didjwk_jwk: (a: number) => number;
export const didjwk_scheme: (a: number) => [number, number];
export const didjwk_authority: (a: number) => [number, number];
export const didjwk_method: (a: number) => [number, number];
export const didjwk_methodId: (a: number) => [number, number];
export const didjwk_toString: (a: number) => [number, number];
export const didjwk_toCoreDid: (a: number) => number;
export const didjwk_toJSON: (a: number) => [number, number, number];
export const didjwk_fromJSON: (a: any) => [number, number, number];
export const didjwk_clone: (a: number) => number;
export const __wbg_issuermetadata_free: (a: number, b: number) => void;
export const issuermetadata_new: (a: number, b: number, c: any) => [number, number, number];
export const issuermetadata_issuer: (a: number) => [number, number];
export const issuermetadata_jwks: (a: number) => [number, number, number];
export const issuermetadata_validate: (a: number, b: number) => [number, number];
export const issuermetadata_toJSON: (a: number) => [number, number, number];
export const __wbg_methodtype_free: (a: number, b: number) => void;
export const methodtype_Ed25519VerificationKey2018: () => number;
export const methodtype_X25519KeyAgreementKey2019: () => number;
export const methodtype_JsonWebKey: () => number;
export const methodtype_JsonWebKey2020: () => number;
export const methodtype_custom: (a: number, b: number) => number;
export const methodtype_toString: (a: number) => [number, number];
export const methodtype_toJSON: (a: number) => [number, number, number];
export const methodtype_fromJSON: (a: any) => [number, number, number];
export const methodtype_clone: (a: number) => number;
export const __wbg_credential_free: (a: number, b: number) => void;
export const credential_BaseContext: () => [number, number, number, number];
export const credential_BaseType: () => [number, number];
export const credential_new: (a: any) => [number, number, number];
export const credential_createDomainLinkageCredential: (a: any) => [number, number, number];
export const credential_context: (a: number) => [number, number, number];
export const credential_id: (a: number) => [number, number];
export const credential_type: (a: number) => any;
export const credential_credentialSubject: (a: number) => [number, number, number];
export const credential_issuer: (a: number) => [number, number, number];
export const credential_issuanceDate: (a: number) => number;
export const credential_expirationDate: (a: number) => number;
export const credential_credentialStatus: (a: number) => [number, number, number];
export const credential_credentialSchema: (a: number) => [number, number, number];
export const credential_refreshService: (a: number) => [number, number, number];
export const credential_termsOfUse: (a: number) => [number, number, number];
export const credential_evidence: (a: number) => [number, number, number];
export const credential_nonTransferable: (a: number) => number;
export const credential_proof: (a: number) => number;
export const credential_properties: (a: number) => [number, number, number];
export const credential_setProof: (a: number, b: number) => void;
export const credential_toJwtClaims: (a: number, b: number) => [number, number, number];
export const credential_toJSON: (a: number) => [number, number, number];
export const credential_fromJSON: (a: any) => [number, number, number];
export const credential_clone: (a: number) => number;
export const __wbg_domainlinkageconfiguration_free: (a: number, b: number) => void;
export const domainlinkageconfiguration_new: (a: any) => [number, number, number];
export const domainlinkageconfiguration_linkedDids: (a: number) => any;
export const domainlinkageconfiguration_issuers: (a: number) => [number, number, number];
export const domainlinkageconfiguration_toJSON: (a: number) => [number, number, number];
export const domainlinkageconfiguration_fromJSON: (a: any) => [number, number, number];
export const domainlinkageconfiguration_clone: (a: number) => number;
export const __wbg_jwtdomainlinkagevalidator_free: (a: number, b: number) => void;
export const jwtdomainlinkagevalidator_new: (a: number) => number;
export const jwtdomainlinkagevalidator_validateLinkage: (a: number, b: any, c: number, d: number, e: number, f: number) => [number, number];
export const jwtdomainlinkagevalidator_validateCredential: (a: number, b: any, c: number, d: number, e: number, f: number) => [number, number];
export const __wbg_decodedjptcredential_free: (a: number, b: number) => void;
export const decodedjptcredential_clone: (a: number) => number;
export const decodedjptcredential_credential: (a: number) => number;
export const decodedjptcredential_customClaims: (a: number) => [number, number, number];
export const decodedjptcredential_decodedJwp: (a: number) => number;
export const __wbg_jptcredentialvalidatorutils_free: (a: number, b: number) => void;
export const jptcredentialvalidatorutils_new: () => number;
export const jptcredentialvalidatorutils_extractIssuer: (a: number) => [number, number, number];
export const jptcredentialvalidatorutils_extractIssuerFromIssuedJpt: (a: number) => [number, number, number];
export const jptcredentialvalidatorutils_checkTimeframesWithValidityTimeframe2024: (a: number, b: number, c: number) => [number, number];
export const jptcredentialvalidatorutils_checkRevocationWithValidityTimeframe2024: (a: number, b: any, c: number) => [number, number];
export const jptcredentialvalidatorutils_checkTimeframesAndRevocationWithValidityTimeframe2024: (a: number, b: any, c: number, d: number) => [number, number];
export const __wbg_jptpresentationvalidator_free: (a: number, b: number) => void;
export const jptpresentationvalidator_validate: (a: number, b: any, c: number, d: number) => [number, number, number];
export const __wbg_jptpresentationvalidatorutils_free: (a: number, b: number) => void;
export const jptpresentationvalidatorutils_extractIssuerFromPresentedJpt: (a: number) => [number, number, number];
export const jptpresentationvalidatorutils_checkTimeframesWithValidityTimeframe2024: (a: number, b: number, c: number) => [number, number];
export const __wbg_jwtcredentialvalidator_free: (a: number, b: number) => void;
export const jwtcredentialvalidator_new: (a: number) => number;
export const jwtcredentialvalidator_validate: (a: number, b: number, c: any, d: number, e: number) => [number, number, number];
export const jwtcredentialvalidator_verifySignature: (a: number, b: number, c: any, d: number) => [number, number, number];
export const jwtcredentialvalidator_checkExpiresOnOrAfter: (a: number, b: number) => [number, number];
export const jwtcredentialvalidator_checkIssuedOnOrBefore: (a: number, b: number) => [number, number];
export const jwtcredentialvalidator_checkSubjectHolderRelationship: (a: number, b: number, c: number, d: number) => [number, number];
export const jwtcredentialvalidator_checkStatus: (a: number, b: any, c: number) => [number, number];
export const jwtcredentialvalidator_checkStatusWithStatusList2021: (a: number, b: number, c: number) => [number, number];
export const jwtcredentialvalidator_extractIssuer: (a: number) => [number, number, number];
export const jwtcredentialvalidator_extractIssuerFromJwt: (a: number) => [number, number, number];
export const __wbg_sdjwtcredentialvalidator_free: (a: number, b: number) => void;
export const sdjwtcredentialvalidator_new: (a: number) => number;
export const sdjwtcredentialvalidator_validateCredential: (a: number, b: number, c: any, d: number, e: number) => [number, number, number];
export const sdjwtcredentialvalidator_verifySignature: (a: number, b: number, c: any, d: number) => [number, number, number];
export const sdjwtcredentialvalidator_validateKeyBindingJwt: (a: number, b: number, c: any, d: number) => [number, number, number];
export const __wbg_jwtpresentationvalidator_free: (a: number, b: number) => void;
export const jwtpresentationvalidator_new: (a: number) => number;
export const jwtpresentationvalidator_validate: (a: number, b: number, c: any, d: number) => [number, number, number];
export const jwtpresentationvalidator_checkStructure: (a: number) => [number, number];
export const jwtpresentationvalidator_extractHolder: (a: number) => [number, number, number];
export const __wbg_presentation_free: (a: number, b: number) => void;
export const presentation_BaseContext: () => [number, number, number, number];
export const presentation_BaseType: () => [number, number];
export const presentation_new: (a: any) => [number, number, number];
export const presentation_context: (a: number) => [number, number, number];
export const presentation_id: (a: number) => [number, number];
export const presentation_type: (a: number) => any;
export const presentation_verifiableCredential: (a: number) => any;
export const presentation_holder: (a: number) => [number, number];
export const presentation_refreshService: (a: number) => [number, number, number];
export const presentation_termsOfUse: (a: number) => [number, number, number];
export const presentation_proof: (a: number) => number;
export const presentation_setProof: (a: number, b: number) => void;
export const presentation_properties: (a: number) => [number, number, number];
export const presentation_toJSON: (a: number) => [number, number, number];
export const presentation_fromJSON: (a: any) => [number, number, number];
export const presentation_clone: (a: number) => number;
export const __wbg_statuslist2021credential_free: (a: number, b: number) => void;
export const statuslist2021credential_new: (a: number) => [number, number, number];
export const statuslist2021credential_id: (a: number) => [number, number];
export const statuslist2021credential_setCredentialStatus: (a: number, b: number, c: number, d: number) => [number, number, number];
export const statuslist2021credential_purpose: (a: number) => number;
export const statuslist2021credential_entry: (a: number, b: number) => [number, number, number];
export const statuslist2021credential_clone: (a: number) => number;
export const statuslist2021credential_fromJSON: (a: any) => [number, number, number];
export const statuslist2021credential_toJSON: (a: number) => [number, number, number];
export const __wbg_statuslist2021credentialbuilder_free: (a: number, b: number) => void;
export const statuslist2021credentialbuilder_new: (a: number) => number;
export const statuslist2021credentialbuilder_purpose: (a: number, b: number) => number;
export const statuslist2021credentialbuilder_subjectId: (a: number, b: number, c: number) => [number, number, number];
export const statuslist2021credentialbuilder_expirationDate: (a: number, b: number) => number;
export const statuslist2021credentialbuilder_issuer: (a: number, b: number, c: number) => [number, number, number];
export const statuslist2021credentialbuilder_context: (a: number, b: number, c: number) => [number, number, number];
export const statuslist2021credentialbuilder_type: (a: number, b: number, c: number) => number;
export const statuslist2021credentialbuilder_proof: (a: number, b: number) => number;
export const statuslist2021credentialbuilder_build: (a: number) => [number, number, number];
export const __wbg_coredid_free: (a: number, b: number) => void;
export const coredid_parse: (a: number, b: number) => [number, number, number];
export const coredid_setMethodName: (a: number, b: number, c: number) => [number, number];
export const coredid_validMethodName: (a: number, b: number) => number;
export const coredid_setMethodId: (a: number, b: number, c: number) => [number, number];
export const coredid_validMethodId: (a: number, b: number) => number;
export const coredid_scheme: (a: number) => [number, number];
export const coredid_authority: (a: number) => [number, number];
export const coredid_method: (a: number) => [number, number];
export const coredid_methodId: (a: number) => [number, number];
export const coredid_join: (a: number, b: number, c: number) => [number, number, number];
export const coredid_toUrl: (a: number) => number;
export const coredid_intoUrl: (a: number) => number;
export const coredid_toString: (a: number) => [number, number];
export const coredid_toJSON: (a: number) => [number, number, number];
export const coredid_fromJSON: (a: any) => [number, number, number];
export const coredid_clone: (a: number) => number;
export const __wbg_coredocument_free: (a: number, b: number) => void;
export const coredocument_new: (a: any) => [number, number, number];
export const coredocument_id: (a: number) => [number, number, number];
export const coredocument_setId: (a: number, b: number) => [number, number];
export const coredocument_controller: (a: number) => [number, number, number];
export const coredocument_setController: (a: number, b: any) => [number, number];
export const coredocument_alsoKnownAs: (a: number) => [number, number, number];
export const coredocument_setAlsoKnownAs: (a: number, b: any) => [number, number];
export const coredocument_verificationMethod: (a: number) => [number, number, number];
export const coredocument_authentication: (a: number) => [number, number, number];
export const coredocument_assertionMethod: (a: number) => [number, number, number];
export const coredocument_keyAgreement: (a: number) => [number, number, number];
export const coredocument_capabilityDelegation: (a: number) => [number, number, number];
export const coredocument_capabilityInvocation: (a: number) => [number, number, number];
export const coredocument_properties: (a: number) => [number, number, number];
export const coredocument_setPropertyUnchecked: (a: number, b: number, c: number, d: any) => [number, number];
export const coredocument_service: (a: number) => [number, number, number];
export const coredocument_insertService: (a: number, b: number) => [number, number];
export const coredocument_removeService: (a: number, b: number) => [number, number, number];
export const coredocument_resolveService: (a: number, b: any) => [number, number, number];
export const coredocument_methods: (a: number, b: number) => [number, number, number];
export const coredocument_verificationRelationships: (a: number) => [number, number, number];
export const coredocument_insertMethod: (a: number, b: number, c: number) => [number, number];
export const coredocument_removeMethod: (a: number, b: number) => [number, number, number];
export const coredocument_resolveMethod: (a: number, b: any, c: number) => [number, number, number];
export const coredocument_attachMethodRelationship: (a: number, b: number, c: number) => [number, number, number];
export const coredocument_detachMethodRelationship: (a: number, b: number, c: number) => [number, number, number];
export const coredocument_verifyJws: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const coredocument_revokeCredentials: (a: number, b: any, c: any) => [number, number];
export const coredocument_unrevokeCredentials: (a: number, b: any, c: any) => [number, number];
export const coredocument_clone: (a: number) => [number, number, number];
export const coredocument__shallowCloneInternal: (a: number) => number;
export const coredocument__strongCountInternal: (a: number) => number;
export const coredocument_toJSON: (a: number) => [number, number, number];
export const coredocument_fromJSON: (a: any) => [number, number, number];
export const coredocument_generateMethod: (a: number, b: number, c: number, d: number, e: any, f: number, g: number, h: number) => [number, number, number];
export const coredocument_purgeMethod: (a: number, b: number, c: number) => [number, number, number];
export const coredocument_createJws: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const coredocument_createCredentialJwt: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const coredocument_createPresentationJwt: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const coredocument_expandDIDJwk: (a: number) => [number, number, number];
export const __wbg_didurl_free: (a: number, b: number) => void;
export const didurl_parse: (a: number, b: number) => [number, number, number];
export const didurl_did: (a: number) => number;
export const didurl_urlStr: (a: number) => [number, number];
export const didurl_fragment: (a: number) => [number, number];
export const didurl_setFragment: (a: number, b: number, c: number) => [number, number];
export const didurl_path: (a: number) => [number, number];
export const didurl_setPath: (a: number, b: number, c: number) => [number, number];
export const didurl_query: (a: number) => [number, number];
export const didurl_setQuery: (a: number, b: number, c: number) => [number, number];
export const didurl_join: (a: number, b: number, c: number) => [number, number, number];
export const didurl_toString: (a: number) => [number, number];
export const didurl_toJSON: (a: number) => [number, number, number];
export const didurl_fromJSON: (a: any) => [number, number, number];
export const didurl_clone: (a: number) => number;
export const __wbg_iotadid_free: (a: number, b: number) => void;
export const iotadid_static_default_network: () => [number, number];
export const iotadid_new: (a: number, b: number, c: number, d: number) => [number, number, number];
export const iotadid_fromAliasId: (a: number, b: number, c: number, d: number) => [number, number, number];
export const iotadid_placeholder: (a: number, b: number) => [number, number, number];
export const iotadid_parse: (a: number, b: number) => [number, number, number];
export const iotadid_network: (a: number) => [number, number];
export const iotadid_tag: (a: number) => [number, number];
export const iotadid_toCoreDid: (a: number) => number;
export const iotadid_scheme: (a: number) => [number, number];
export const iotadid_authority: (a: number) => [number, number];
export const iotadid_method: (a: number) => [number, number];
export const iotadid_methodId: (a: number) => [number, number];
export const iotadid_join: (a: number, b: number, c: number) => [number, number, number];
export const iotadid_toUrl: (a: number) => number;
export const iotadid_toAliasId: (a: number) => [number, number];
export const iotadid_intoUrl: (a: number) => number;
export const iotadid_toJSON: (a: number) => [number, number, number];
export const iotadid_fromJSON: (a: any) => [number, number, number];
export const iotadid_clone: (a: number) => number;
export const __wbg_decodedjws_free: (a: number, b: number) => void;
export const decodedjws_claims: (a: number) => [number, number, number, number];
export const decodedjws_claimsBytes: (a: number) => [number, number];
export const decodedjws_protectedHeader: (a: number) => number;
export const decodedjws_clone: (a: number) => number;
export const decodedjws_toJSON: (a: number) => [number, number, number];
export const __wbg_revocationbitmap_free: (a: number, b: number) => void;
export const revocationbitmap_new: () => number;
export const revocationbitmap_type: () => [number, number];
export const revocationbitmap_isRevoked: (a: number, b: number) => number;
export const revocationbitmap_revoke: (a: number, b: number) => number;
export const revocationbitmap_unrevoke: (a: number, b: number) => number;
export const revocationbitmap_len: (a: number) => [number, number, number];
export const revocationbitmap_toService: (a: number, b: number) => [number, number, number];
export const revocationbitmap_fromEndpoint: (a: number) => [number, number, number];
export const __wbg_jwkgenoutput_free: (a: number, b: number) => void;
export const jwkgenoutput_new: (a: number, b: number, c: number) => number;
export const jwkgenoutput_jwk: (a: number) => number;
export const jwkgenoutput_keyId: (a: number) => [number, number];
export const jwkgenoutput_toJSON: (a: number) => [number, number, number];
export const jwkgenoutput_fromJSON: (a: any) => [number, number, number];
export const jwkgenoutput_clone: (a: number) => number;
export const __wbg_storage_free: (a: number, b: number) => void;
export const storage_new: (a: any, b: any) => number;
export const storage_keyIdStorage: (a: number) => any;
export const storage_keyStorage: (a: number) => any;
export const __wbg_storagesigner_free: (a: number, b: number) => void;
export const storagesigner_new: (a: number, b: number, c: number, d: number) => number;
export const storagesigner_keyId: (a: number) => [number, number];
export const storagesigner_sign: (a: number, b: number, c: number) => any;
export const storagesigner_publicKey: (a: number) => any;
export const storagesigner_iotaPublicKeyBytes: (a: number) => any;
export const __wbg_methoddata_free: (a: number, b: number) => void;
export const methoddata_newBase58: (a: number, b: number) => number;
export const methoddata_newMultibase: (a: number, b: number) => number;
export const methoddata_newJwk: (a: number) => [number, number, number];
export const methoddata_newCustom: (a: number, b: number, c: any) => [number, number, number];
export const methoddata_tryCustom: (a: number) => [number, number, number];
export const methoddata_tryDecode: (a: number) => [number, number, number, number];
export const methoddata_tryPublicKeyJwk: (a: number) => [number, number, number];
export const methoddata_toJSON: (a: number) => [number, number, number];
export const methoddata_fromJSON: (a: any) => [number, number, number];
export const methoddata_clone: (a: number) => number;
export const __wbg_custommethoddata_free: (a: number, b: number) => void;
export const custommethoddata_new: (a: number, b: number, c: any) => [number, number, number];
export const custommethoddata_clone: (a: number) => number;
export const custommethoddata_toJSON: (a: number) => [number, number, number];
export const custommethoddata_fromJSON: (a: any) => [number, number, number];
export const __wbg_verificationmethod_free: (a: number, b: number) => void;
export const verificationmethod_newFromJwk: (a: any, b: number, c: number, d: number) => [number, number, number];
export const verificationmethod_new: (a: number, b: number, c: number, d: number) => [number, number, number];
export const verificationmethod_id: (a: number) => number;
export const verificationmethod_setId: (a: number, b: number) => [number, number];
export const verificationmethod_controller: (a: number) => number;
export const verificationmethod_setController: (a: number, b: number) => void;
export const verificationmethod_type: (a: number) => number;
export const verificationmethod_setType: (a: number, b: number) => void;
export const verificationmethod_data: (a: number) => number;
export const verificationmethod_setData: (a: number, b: number) => void;
export const verificationmethod_properties: (a: number) => [number, number, number];
export const verificationmethod_setPropertyUnchecked: (a: number, b: number, c: number, d: any) => [number, number];
export const verificationmethod_toJSON: (a: number) => [number, number, number];
export const verificationmethod_fromJSON: (a: any) => [number, number, number];
export const verificationmethod_clone: (a: number) => number;
export const __wbg_iotatransactionblockresponseessence_free: (a: number, b: number) => void;
export const __wbg_get_iotatransactionblockresponseessence_effectsExist: (a: number) => number;
export const __wbg_set_iotatransactionblockresponseessence_effectsExist: (a: number, b: number) => void;
export const __wbg_get_iotatransactionblockresponseessence_effects: (a: number) => [number, number];
export const __wbg_set_iotatransactionblockresponseessence_effects: (a: number, b: number, c: number) => void;
export const __wbg_get_iotatransactionblockresponseessence_effectsExecutionStatus: (a: number) => any;
export const __wbg_set_iotatransactionblockresponseessence_effectsExecutionStatus: (a: number, b: number) => void;
export const __wbg_get_iotatransactionblockresponseessence_effectsCreated: (a: number) => [number, number];
export const __wbg_set_iotatransactionblockresponseessence_effectsCreated: (a: number, b: number, c: number) => void;
export const __wbg_identityclient_free: (a: number, b: number) => void;
export const identityclient_create: (a: number, b: any) => any;
export const identityclient_senderPublicKey: (a: number) => [number, number, number];
export const identityclient_senderAddress: (a: number) => [number, number];
export const identityclient_network: (a: number) => [number, number];
export const identityclient_createIdentity: (a: number, b: number) => [number, number, number];
export const identityclient_getIdentity: (a: number, b: number, c: number) => any;
export const identityclient_packageId: (a: number) => [number, number];
export const identityclient_packageHistory: (a: number) => [number, number];
export const identityclient_resolveDid: (a: number, b: number) => any;
export const identityclient_publishDidDocument: (a: number, b: number, c: number, d: number) => [number, number, number];
export const identityclient_publishDidDocumentUpdate: (a: number, b: number, c: bigint) => any;
export const identityclient_deactivateDidOutput: (a: number, b: number, c: bigint) => any;
export const identityclient_iotaClient: (a: number) => any;
export const identityclient_signer: (a: number) => any;
export const identityclient_readOnly: (a: number) => number;
export const __wbg_transactionoutputinternaliotadocument_free: (a: number, b: number) => void;
export const transactionoutputinternaliotadocument_output: (a: number) => number;
export const transactionoutputinternaliotadocument_response: (a: number) => any;
export const __wbg_publishdiddocument_free: (a: number, b: number) => void;
export const publishdiddocument_new: (a: number, b: number, c: number) => [number, number, number];
export const publishdiddocument_buildProgrammableTransaction: (a: number, b: any) => any;
export const publishdiddocument_apply: (a: number, b: any, c: any) => any;
export const __wbg_identity_free: (a: number, b: number) => void;
export const identity_toFullFledged: (a: number) => number;
export const __wbg_identityclientreadonly_free: (a: number, b: number) => void;
export const identityclientreadonly_create: (a: any) => any;
export const identityclientreadonly_createWithPkgId: (a: any, b: number, c: number) => any;
export const identityclientreadonly_packageId: (a: number) => [number, number];
export const identityclientreadonly_packageHistory: (a: number) => [number, number];
export const identityclientreadonly_iotaClient: (a: number) => any;
export const identityclientreadonly_network: (a: number) => [number, number];
export const identityclientreadonly_resolveDid: (a: number, b: number) => any;
export const identityclientreadonly_getIdentity: (a: number, b: number, c: number) => any;
export const iotadid_toString: (a: number) => [number, number];
export const coredid_toCoreDid: (a: number) => number;
export const iotadid_static_method: () => [number, number];
export const __wbg_jptcredentialvalidationoptions_free: (a: number, b: number) => void;
export const jptcredentialvalidationoptions_clone: (a: number) => number;
export const jptcredentialvalidationoptions_toJSON: (a: number) => [number, number, number];
export const jptcredentialvalidationoptions_fromJSON: (a: any) => [number, number, number];
export const jptcredentialvalidationoptions_new: (a: number) => [number, number, number];
export const __wbg_jwpverificationoptions_free: (a: number, b: number) => void;
export const jwpverificationoptions_clone: (a: number) => number;
export const jwpverificationoptions_toJSON: (a: number) => [number, number, number];
export const jwpverificationoptions_fromJSON: (a: any) => [number, number, number];
export const jwpverificationoptions_new: (a: number) => [number, number, number];
export const __wbg_jptpresentationvalidationoptions_free: (a: number, b: number) => void;
export const jptpresentationvalidationoptions_clone: (a: number) => number;
export const jptpresentationvalidationoptions_toJSON: (a: number) => [number, number, number];
export const jptpresentationvalidationoptions_fromJSON: (a: any) => [number, number, number];
export const jptpresentationvalidationoptions_new: (a: number) => [number, number, number];
export const __wbg_jwt_free: (a: number, b: number) => void;
export const jwt_constructor: (a: number, b: number) => number;
export const jwt_toString: (a: number) => [number, number];
export const jwt_toJSON: (a: number) => [number, number, number];
export const jwt_fromJSON: (a: any) => [number, number, number];
export const jwt_clone: (a: number) => number;
export const encodeB64: (a: number, b: number) => [number, number];
export const decodeB64: (a: number, b: number) => [number, number, number, number];
export const __wbg_jwpissued_free: (a: number, b: number) => void;
export const jwpissued_toJSON: (a: number) => [number, number, number];
export const jwpissued_fromJSON: (a: any) => [number, number, number];
export const jwpissued_clone: (a: number) => number;
export const jwpissued_encode: (a: number, b: number) => [number, number, number, number];
export const jwpissued_setProof: (a: number, b: number, c: number) => void;
export const jwpissued_getProof: (a: number) => [number, number];
export const jwpissued_getPayloads: (a: number) => number;
export const jwpissued_setPayloads: (a: number, b: number) => void;
export const jwpissued_getIssuerProtectedHeader: (a: number) => number;
export const __wbg_methoddigest_free: (a: number, b: number) => void;
export const methoddigest_new: (a: number) => [number, number, number];
export const methoddigest_pack: (a: number) => any;
export const methoddigest_unpack: (a: any) => [number, number, number];
export const methoddigest_clone: (a: number) => number;
export const __wbg_sendaction_free: (a: number, b: number) => void;
export const sendaction_objectRecipientMap: (a: number) => [number, number];
export const __wbg_sendproposal_free: (a: number, b: number) => void;
export const sendproposal_id: (a: number) => [number, number, number, number];
export const sendproposal_action: (a: number) => [number, number, number];
export const sendproposal_expiration_epoch: (a: number) => [number, bigint, number, number];
export const sendproposal_votes: (a: number) => [bigint, number, number];
export const sendproposal_voters: (a: number) => [number, number, number];
export const sendproposal_approve: (a: number, b: number, c: number) => number;
export const sendproposal_intoTx: (a: number, b: number, c: number) => number;
export const __wbg_approvesendproposal_free: (a: number, b: number) => void;
export const approvesendproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const approvesendproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_executesendproposal_free: (a: number, b: number) => void;
export const executesendproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const executesendproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_createsendproposal_free: (a: number, b: number) => void;
export const createsendproposal_buildProgrammableTransaction: (a: number, b: any) => any;
export const createsendproposal_apply: (a: number, b: any, c: any) => any;
export const __wbg_jpt_free: (a: number, b: number) => void;
export const jpt_new: (a: number, b: number) => number;
export const jpt_toString: (a: number) => [number, number];
export const jpt_clone: (a: number) => number;
export const __wbg_jws_free: (a: number, b: number) => void;
export const jws_constructor: (a: number, b: number) => number;
export const jws_toString: (a: number) => [number, number];
export const __wbg_resolver_free: (a: number, b: number) => void;
export const resolver_new: (a: any) => [number, number, number];
export const resolver_resolve: (a: number, b: number, c: number) => [number, number, number];
export const resolver_resolveMultiple: (a: number, b: any) => [number, number, number];
export const __wbg_sdjwt_free: (a: number, b: number) => void;
export const sdjwt_new: (a: number, b: number, c: any, d: number, e: number) => [number, number, number];
export const sdjwt_presentation: (a: number) => [number, number];
export const sdjwt_parse: (a: number, b: number) => [number, number, number];
export const sdjwt_jwt: (a: number) => [number, number];
export const sdjwt_disclosures: (a: number) => any;
export const sdjwt_keyBindingJwt: (a: number) => [number, number];
export const sdjwt_clone: (a: number) => number;
export const sdjwt_toString: (a: number) => [number, number];
export const __wbg_jptcredentialvalidator_free: (a: number, b: number) => void;
export const jptcredentialvalidator_validate: (a: number, b: any, c: number, d: number) => [number, number, number];
export const __wbg_statuslist2021entry_free: (a: number, b: number) => void;
export const statuslist2021entry_new: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const statuslist2021entry_id: (a: number) => [number, number];
export const statuslist2021entry_purpose: (a: number) => number;
export const statuslist2021entry_index: (a: number) => number;
export const statuslist2021entry_statusListCredential: (a: number) => [number, number];
export const statuslist2021entry_toStatus: (a: number) => [number, number, number];
export const statuslist2021entry_clone: (a: number) => number;
export const statuslist2021entry_toJSON: (a: number) => [number, number, number];
export const statuslist2021entry_fromJSON: (a: any) => [number, number, number];
export const __wbg_sha256hasher_free: (a: number, b: number) => void;
export const sha256hasher_new: () => number;
export const sha256hasher_algName: (a: number) => [number, number];
export const sha256hasher_digest: (a: number, b: number, c: number) => [number, number];
export const sha256hasher_encodedDigest: (a: number, b: number, c: number) => [number, number];
export const __wbg_transactionbuilder_free: (a: number, b: number) => void;
export const transactionbuilder_new: (a: any) => number;
export const transactionbuilder_transaction: (a: number) => any;
export const transactionbuilder_withGasPrice: (a: number, b: bigint) => number;
export const transactionbuilder_withGasBudget: (a: number, b: bigint) => number;
export const transactionbuilder_withGasOwner: (a: number, b: number, c: number) => [number, number, number];
export const transactionbuilder_withGasPayment: (a: number, b: number, c: number) => [number, number, number];
export const transactionbuilder_withSender: (a: number, b: number, c: number) => [number, number, number];
export const transactionbuilder_withSignature: (a: number, b: any) => any;
export const transactionbuilder_withSponsor: (a: number, b: any, c: any) => any;
export const transactionbuilder_build: (a: number, b: any) => any;
export const transactionbuilder_build_with_defaults: (a: number, b: any) => any;
export const transactionbuilder_buildAndExecute: (a: number, b: any) => any;
export const __wbg_transactionoutput_free: (a: number, b: number) => void;
export const __wbg_get_transactionoutput_output: (a: number) => any;
export const __wbg_set_transactionoutput_output: (a: number, b: any) => void;
export const __wbg_get_transactionoutput_response: (a: number) => any;
export const __wbg_set_transactionoutput_response: (a: number, b: any) => void;
export const __wbg_wasmmanagedcoreclientreadonly_free: (a: number, b: number) => void;
export const wasmmanagedcoreclientreadonly_packageId: (a: number) => [number, number];
export const wasmmanagedcoreclientreadonly_packageHistory: (a: number) => [number, number];
export const wasmmanagedcoreclientreadonly_network: (a: number) => [number, number];
export const wasmmanagedcoreclientreadonly_iotaClient: (a: number) => any;
export const __wbg_wasmmanagedcoreclient_free: (a: number, b: number) => void;
export const wasmmanagedcoreclient_packageId: (a: number) => [number, number];
export const wasmmanagedcoreclient_packageHistory: (a: number) => [number, number];
export const wasmmanagedcoreclient_network: (a: number) => [number, number];
export const wasmmanagedcoreclient_iotaClient: (a: number) => any;
export const wasmmanagedcoreclient_signer: (a: number) => any;
export const wasmmanagedcoreclient_senderAddress: (a: number) => [number, number];
export const wasmmanagedcoreclient_senderPublicKey: (a: number) => [number, number, number];
export const rustsecp256k1_v0_8_1_context_create: (a: number) => number;
export const rustsecp256k1_v0_8_1_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_8_1_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_8_1_default_error_callback_fn: (a: number, b: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const closure4018_externref_shim: (a: number, b: number, c: any) => void;
export const closure4180_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
