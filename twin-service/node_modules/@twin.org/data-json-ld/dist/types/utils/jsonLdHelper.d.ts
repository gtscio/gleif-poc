import { type IValidationFailure } from "@twin.org/core";
import { type ValidationMode } from "@twin.org/data-core";
import type { IJsonLdDocument } from "../models/IJsonLdDocument";
/**
 * Class to help with JSON LD.
 */
export declare class JsonLdHelper {
    /**
     * Validate a JSON-LD document.
     * @param document The JSON-LD document to validate.
     * @param validationFailures The list of validation failures to add to.
     * @param options Optional options for validation.
     * @param options.failOnMissingType If true, will fail validation if the data type is missing, defaults to false.
     * @param options.validationMode The validation mode to use, defaults to either.
     * @returns True if the document was valid.
     */
    static validate<T extends IJsonLdDocument = IJsonLdDocument>(document: T, validationFailures: IValidationFailure[], options?: {
        validationMode?: ValidationMode;
        failOnMissingType?: boolean;
    }): Promise<boolean>;
}
