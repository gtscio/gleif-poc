import type { IJwk } from "../models/IJwk";
import type { JwkCryptoKey } from "../models/jwkCryptoKey";
/**
 * Class to handle JSON Web Keys.
 */
export declare class Jwk {
    /**
     * Convert the JWK to a crypto key.
     * @param jwk The JWK to convert.
     * @param alg The alg to be used, defaults to jwk.alg.
     * @returns The crypto key.
     */
    static toCryptoKey(jwk: IJwk, alg?: string): Promise<JwkCryptoKey>;
    /**
     * Convert the Ed25519 private key to a crypto key.
     * @param privateKey The private key to use.
     * @returns The crypto key.
     */
    static fromEd25519Private(privateKey: Uint8Array): Promise<IJwk>;
    /**
     * Convert the Ed25519 public key to a crypto key.
     * @param publicKey The private key to use.
     * @returns The crypto key.
     */
    static fromEd25519Public(publicKey: Uint8Array): Promise<IJwk>;
    /**
     * Convert the JWK to raw keys.
     * @param jwk The JWK to convert to raw.
     * @returns The crypto key.
     */
    static toRaw(jwk: IJwk): Promise<{
        publicKey?: Uint8Array;
        privateKey?: Uint8Array;
    }>;
    /**
     * Generate a KID for the JWK.
     * @param jwk The JWK to generate a KID for.
     * @returns The KID.
     */
    static generateKid(jwk: IJwk): Promise<string>;
}
