import type { IPatchOperation } from "../models/IPatchOperation";
/**
 * Helpers methods for JSON objects.
 */
export declare class JsonHelper {
    /**
     * Serializes in canonical format.
     * Based on https://www.rfc-editor.org/rfc/rfc8785.
     * @param object The object to be serialized.
     * @returns The serialized object.
     */
    static canonicalize(object: unknown): string;
    /**
     * Creates a RFC 6902 diff set.
     * Based on https://www.rfc-editor.org/rfc/rfc6902.
     * @param object1 The first object.
     * @param object2 The second object.
     * @returns The list of patches.
     */
    static diff<T = unknown>(object1: T, object2: T): IPatchOperation[];
    /**
     * Applies a RFC 6902 diff set to an object.
     * Based on https://www.rfc-editor.org/rfc/rfc6902.
     * @param object The object to patch.
     * @param patches The second object.
     * @returns The updated object.
     * @throws GeneralError if the patch fails.
     */
    static patch<T = unknown>(object: T, patches: IPatchOperation[]): T;
    /**
     * Stringify the JSON with support for extended data types date/bigint/uint8array.
     * @param object The object to stringify.
     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
     * @returns The stringified object.
     */
    static stringifyEx(object: any, space?: string | number): string;
    /**
     * Parse the JSON string with support for extended data types date/bigint/uint8array.
     * @param json The object to pause.
     * @returns The object.
     */
    static parseEx(json: string): any;
    /**
     * Replacer function to handle extended data types.
     * @param this The object.
     * @param key The key.
     * @param value The value.
     * @returns The value.
     */
    static stringifyExReplacer(this: any, key: string, value: unknown): unknown;
    /**
     * Reviver function to handle extended data types.
     * @param this The object.
     * @param key The key.
     * @param value The value.
     * @returns The value.
     */
    static parseExReviver(this: any, key: string, value: unknown): unknown;
}
