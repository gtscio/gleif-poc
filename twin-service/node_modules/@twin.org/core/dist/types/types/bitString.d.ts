/**
 * A class to represent a bit string.
 */
export declare class BitString {
    /**
     * Create a new instance of BitString.
     * @param numberBits The length of the bit string.
     */
    constructor(numberBits: number);
    /**
     * Create a new instance of BitString from a bit array.
     * @param bits The bits to create the bit string from.
     * @param numberBits The number of bits in the bit string.
     * @returns The new instance of BitString.
     */
    static fromBits(bits: Uint8Array, numberBits: number): BitString;
    /**
     * Get the bit at the given index.
     * @param index The index to get the bit for.
     * @returns True if the bit at the index is set.
     * @throws GeneralError if the index is out of range.
     */
    getBit(index: number): boolean;
    /**
     * Set the bit at the given index.
     * @param index The index to set the bit for.
     * @param value The value to set the bit to.
     * @throws GeneralError if the index is out of range.
     */
    setBit(index: number, value: boolean): void;
    /**
     * Get the bits of the bit string.
     * @returns The bits stored in a Uint8Array.
     */
    getBits(): Uint8Array;
    /**
     * Get the length of the bit string.
     * @returns The length of the bit string.
     */
    getLength(): number;
}
