import { type IJwtHeader, type IJwtPayload } from "@twin.org/web";
import type { IVaultConnector } from "../models/IVaultConnector";
/**
 * Helpers for vault connectors.
 */
export declare class VaultConnectorHelper {
    /**
     * Sign a JWT using vault connector.
     * @param vaultConnector The vault connector to use.
     * @param keyName The name of the key to sign with.
     * @param header The header to sign.
     * @param payload The payload to sign.
     * @returns The token.
     */
    static jwtSigner(vaultConnector: IVaultConnector, keyName: string, header: IJwtHeader, payload: IJwtPayload): Promise<string>;
    /**
     * Verify a JWT using a vault connector.
     * @param vaultConnector The vault connector to use.
     * @param keyName The name of the key to verify with.
     * @param token The token to verify.
     * @returns The header and payload if verification successful.
     */
    static jwtVerifier<T extends IJwtHeader, U extends IJwtPayload>(vaultConnector: IVaultConnector, keyName: string, token: string): Promise<{
        header: T;
        payload: U;
    }>;
}
