import type { IIdentityResolverConnector } from "@twin.org/identity-models";
import type { IDidDocument } from "@twin.org/standards-w3c-did";
import type { IIotaIdentityResolverConnectorConstructorOptions } from "./models/IIotaIdentityResolverConnectorConstructorOptions";
/**
 * Class for performing identity operations on IOTA.
 */
export declare class IotaIdentityResolverConnector implements IIdentityResolverConnector {
    /**
     * The namespace supported by the identity connector.
     */
    static readonly NAMESPACE: string;
    /**
     * Runtime name for the class.
     */
    readonly CLASS_NAME: string;
    /**
     * Create a new instance of IotaIdentityResolverConnector.
     * @param options The options for the identity connector.
     */
    constructor(options: IIotaIdentityResolverConnectorConstructorOptions);
    /**
     * Resolve a document from its id.
     * @param documentId The id of the document to resolve.
     * @returns The resolved document.
     * @throws NotFoundError if the id can not be resolved.
     */
    resolveDocument(documentId: string): Promise<IDidDocument>;
}
