import type { IJsonLdNodeObject } from "@twin.org/data-json-ld";
import { type IJwtHeader, type IJwtPayload } from "@twin.org/web";
import type { IIdentityResolverComponent } from "../models/IIdentityResolverComponent";
/**
 * Helper methods for verification.
 */
export declare class VerificationHelper {
    /**
     * Runtime name for the class.
     */
    static readonly CLASS_NAME: string;
    /**
     * Verified the JWT.
     * @param resolver The resolver to use for finding the document.
     * @param jwt The token to verify.
     * @returns The decoded payload.
     */
    static verifyJwt<T extends IJwtHeader, U extends IJwtPayload>(resolver: IIdentityResolverComponent, jwt: string): Promise<{
        header: T;
        payload: U;
    }>;
    /**
     * Verified the proof for the document e.g. verifiable credential.
     * @param resolver The resolver to use for finding the document.
     * @param secureDocument The secure document to verify.
     * @returns True if the verification is successful.
     */
    static verifyProof(resolver: IIdentityResolverComponent, secureDocument: IJsonLdNodeObject): Promise<boolean>;
}
