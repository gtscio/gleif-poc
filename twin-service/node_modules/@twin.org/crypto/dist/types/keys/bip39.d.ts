/**
 * Implementation of Bip39 for mnemonic generation.
 */
export declare class Bip39 {
    /**
     * Generate a random mnemonic.
     * @param strength The strength of the mnemonic to generate, defaults to 256.
     * @param words The wordlist to use, defaults to the English wordlist.
     * @returns The random mnemonic.
     * @throws Error if the length is not a multiple of 32.
     */
    static randomMnemonic(strength?: number, words?: string[]): string;
    /**
     * Generate a mnemonic from the entropy.
     * @param entropy The entropy to generate.
     * @param words The wordlist to use, defaults to the English wordlist.
     * @returns The mnemonic.
     * @throws Error if the length of the entropy is not a multiple of 4, or is less than 16 or greater than 32.
     */
    static entropyToMnemonic(entropy: Uint8Array, words?: string[]): string;
    /**
     * Convert a mnemonic to a seed.
     * @param mnemonic The mnemonic to convert.
     * @param password The password to apply to the seed generation.
     * @returns The seed.
     */
    static mnemonicToSeed(mnemonic: string, password?: string): Uint8Array;
    /**
     * Convert the mnemonic back to entropy.
     * @param mnemonic The mnemonic to convert.
     * @param words The wordlist to use, defaults to the English wordlist.
     * @returns The entropy.
     * @throws Error if the number of words is not a multiple of 3.
     */
    static mnemonicToEntropy(mnemonic: string, words?: string[]): Uint8Array;
}
